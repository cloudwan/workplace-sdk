syntax = "proto3";

package ntt.workplace.v1alpha2;

import "edgelq-sdk/common/types/meta.proto";
import "google/api/resource.proto";
import "workplace-sdk/proto/v1alpha2/common.proto";

option go_package = "github.com/cloudwan/workplace-sdk/resources/v1alpha2/vendor_connection;vendor_connection";
option java_multiple_files = true;
option java_outer_classname = "VendorConnectionProto";
option java_package = "com.ntt.workplace.pb.v1alpha2";

// PointGrab
message PointGrab {
  message Telemetry {
    enum NotificationType {
      NOTIFICATION_TYPE_UNSPECIFIED = 0;

      COUNTING = 1;

      TRAFFIC = 2;

      HEATMAP = 3;

      XY = 4;
    }
  }
}

// VendorConnection Resource
message VendorConnection {
  option (google.api.resource) = {
    type : "workplace.edgelq.com/VendorConnection"
    pattern : "projects/{project}/vendorConnections/{vendor_connection}"
  };

  // Name of VendorConnection
  string name = 1;

  // Display Name
  string display_name = 2;

  // Vendor type. Setting specific Vendor type requires setting corresponding
  // VendorConnectionSpec. Supported vendors:
  // - PointGrab
  Vendor vendor = 3;

  // VendorConnection spec
  Spec spec = 4;

  Info info = 5;

  ntt.types.Meta metadata = 6;

  message Spec {
    PointGrabSpec point_grab = 1;

    message PointGrabSpec {
      // endpoint url, e.g. https://cpms.pointgrab.com/be/cp
      string endpoint = 1;

      // Auth data
      Auth auth = 2;

      CallbackSpec callback_spec = 3;

      message Auth {
        // application id
        string application = 1;

        // secret
        string secret = 2;

        // token endpoint url, e.g.
        // https://cpms.pointgrab.com/be/cp/oauth2/token
        string token_endpoint = 3;
      }

      // CallbackSpec
      message CallbackSpec {
        // Notification auth settings
        AuthToken auth_token = 1;

        message AuthToken {
          // Token header, e.g. "X-Auth-Token"
          string token_header = 1;

          // Token value, provided to PointGrab PUSH subscription to
          // authenticate it
          string token_value = 2;
        }
      }
    }
  }

  message Info {
    // PointGrab info data
    PointGrabInfo info = 1;

    message PointGrabInfo {
      // List of subscriptions
      repeated TelemetrySubscription telemetry_subscriptions = 1;

      message TelemetrySubscription {
        // Telemetry Subscription Id
        string subscription_id = 1;

        // NotificationType of this subscription
        NotificationType notification_type = 2;

        enum NotificationType {
          NOTIFICATION_TYPE_UNSPECIFIED = 0;

          COUNTING = 1;

          TRAFFIC = 2;

          HEATMAP = 3;

          XY = 4;
        }
      }
    }
  }
}
