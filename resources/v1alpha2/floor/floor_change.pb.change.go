// Code generated by protoc-gen-goten-resource
// Resource change: FloorChange
// DO NOT EDIT!!!

package floor

import (
	gotenresource "github.com/cloudwan/goten-sdk/runtime/resource"
)

// proto imports
import (
	building "github.com/cloudwan/workplace-sdk/resources/v1alpha2/building"
	field_mask "google.golang.org/genproto/protobuf/field_mask"
)

// ensure the imports are used
var (
	_ = gotenresource.ListQuery(nil)
)

// make sure we're using proto imports
var (
	_ = &field_mask.FieldMask{}
	_ = &building.Building{}
)

func (c *FloorChange) IsAdd() bool {
	if c == nil {
		return false
	}
	_, ok := c.ChangeType.(*FloorChange_Added_)
	return ok
}

func (c *FloorChange) IsModify() bool {
	if c == nil {
		return false
	}
	_, ok := c.ChangeType.(*FloorChange_Modified_)
	return ok
}

func (c *FloorChange) IsCurrent() bool {
	if c == nil {
		return false
	}
	_, ok := c.ChangeType.(*FloorChange_Current_)
	return ok
}

func (c *FloorChange) IsDelete() bool {
	if c == nil {
		return false
	}
	_, ok := c.ChangeType.(*FloorChange_Removed_)
	return ok
}

func (c *FloorChange) GetCurrentViewIndex() int32 {
	switch cType := c.ChangeType.(type) {
	case *FloorChange_Added_:
		return cType.Added.ViewIndex
	case *FloorChange_Modified_:
		return cType.Modified.ViewIndex
	}
	return 0
}

func (c *FloorChange) GetPreviousViewIndex() int32 {
	switch cType := c.ChangeType.(type) {
	case *FloorChange_Removed_:
		return cType.Removed.ViewIndex
	case *FloorChange_Modified_:
		return cType.Modified.PreviousViewIndex
	}
	return 0
}

func (c *FloorChange) GetFloor() *Floor {
	if c == nil {
		return nil
	}
	switch cType := c.ChangeType.(type) {
	case *FloorChange_Added_:
		return cType.Added.Floor
	case *FloorChange_Modified_:
		return cType.Modified.Floor
	case *FloorChange_Current_:
		return cType.Current.Floor
	case *FloorChange_Removed_:
		return nil
	}
	return nil
}

func (c *FloorChange) GetResource() gotenresource.Resource {
	return c.GetFloor()
}

func (c *FloorChange) GetFloorName() *Name {
	if c == nil {
		return nil
	}
	switch cType := c.ChangeType.(type) {
	case *FloorChange_Added_:
		return cType.Added.Floor.GetName()
	case *FloorChange_Modified_:
		return cType.Modified.Name
	case *FloorChange_Current_:
		return cType.Current.Floor.GetName()
	case *FloorChange_Removed_:
		return cType.Removed.Name
	}
	return nil
}

func (c *FloorChange) GetRawName() gotenresource.Name {
	return c.GetFloorName()
}

func (c *FloorChange) SetAddedRaw(snapshot gotenresource.Resource, idx int) {
	c.ChangeType = &FloorChange_Added_{
		Added: &FloorChange_Added{
			Floor:     snapshot.(*Floor),
			ViewIndex: int32(idx),
		},
	}
}

func (c *FloorChange) SetModifiedRaw(name gotenresource.Name, snapshot gotenresource.Resource, prevIdx int, newIdx int) {
	c.ChangeType = &FloorChange_Modified_{
		Modified: &FloorChange_Modified{
			Name:              name.(*Name),
			Floor:             snapshot.(*Floor),
			PreviousViewIndex: int32(prevIdx),
			ViewIndex:         int32(newIdx),
		},
	}
}

func (c *FloorChange) SetCurrentRaw(snapshot gotenresource.Resource) {
	c.ChangeType = &FloorChange_Current_{
		Current: &FloorChange_Current{
			Floor: snapshot.(*Floor),
		},
	}
}

func (c *FloorChange) SetDeletedRaw(name gotenresource.Name, idx int) {
	c.ChangeType = &FloorChange_Removed_{
		Removed: &FloorChange_Removed{
			Name:      name.(*Name),
			ViewIndex: int32(idx),
		},
	}
}
