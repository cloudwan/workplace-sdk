// Code generated by protoc-gen-goten-resource
// Resource: Zone
// DO NOT EDIT!!!

package zone

import (
	gotenobject "github.com/cloudwan/goten-sdk/runtime/object"
	gotenresource "github.com/cloudwan/goten-sdk/runtime/resource"
)

// proto imports
import (
	ntt_meta "github.com/cloudwan/edgelq-sdk/common/types/meta"
	area "github.com/cloudwan/workplace-sdk/resources/v1alpha2/area"
	building "github.com/cloudwan/workplace-sdk/resources/v1alpha2/building"
	workplace_common "github.com/cloudwan/workplace-sdk/resources/v1alpha2/common"
	floor "github.com/cloudwan/workplace-sdk/resources/v1alpha2/floor"
	site "github.com/cloudwan/workplace-sdk/resources/v1alpha2/site"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
)

// ensure the imports are used
var (
	_ = gotenobject.FieldPath(nil)
	_ = gotenresource.ListQuery(nil)
)

// make sure we're using proto imports
var (
	_ = &ntt_meta.Meta{}
	_ = &timestamp.Timestamp{}
	_ = &area.Area{}
	_ = &building.Building{}
	_ = &workplace_common.BBox{}
	_ = &floor.Floor{}
	_ = &site.Site{}
)

var (
	descriptor = &Descriptor{
		typeName: gotenresource.NewTypeName(
			"Zone", "Zones", "workplace.edgelq.com"),
		nameDescriptor: gotenresource.NewNameDescriptor(
			&Zone_FieldTerminalPath{selector: Zone_FieldPathSelectorName},
			"pattern", "zoneId",
			[]string{"projectId", "regionId", "siteId", "buildingId", "floorId", "areaId"},
			[]gotenresource.NamePattern{NamePattern_Project_Region_Site, NamePattern_Project_Region_Site_Building, NamePattern_Project_Region_Site_Building_Floor, NamePattern_Project_Region_Site_Building_Floor_Area}),
	}
)

type Descriptor struct {
	nameDescriptor *gotenresource.NameDescriptor
	typeName       *gotenresource.TypeName
}

func GetDescriptor() *Descriptor {
	return descriptor
}

func (d *Descriptor) NewZone() *Zone {
	return &Zone{}
}

func (d *Descriptor) NewResource() gotenresource.Resource {
	return d.NewZone()
}

func (d *Descriptor) NewResourceName() gotenresource.Name {
	return NewNameBuilder().Name()
}

func (d *Descriptor) NewZoneName() *Name {
	return NewNameBuilder().Name()
}

func (d *Descriptor) NewGetQuery() gotenresource.GetQuery {
	return &GetQuery{}
}

func (d *Descriptor) NewListQuery() gotenresource.ListQuery {
	return &ListQuery{}
}

func (d *Descriptor) NewSearchQuery() gotenresource.SearchQuery {
	return nil
}

func (d *Descriptor) NewWatchQuery() gotenresource.WatchQuery {
	return &WatchQuery{}
}
func (d *Descriptor) NewZoneCursor() *PagerCursor {
	return &PagerCursor{}
}

func (d *Descriptor) NewResourceCursor() gotenresource.Cursor {
	return d.NewZoneCursor()
}
func (d *Descriptor) NewZoneChange() *ZoneChange {
	return &ZoneChange{}
}

func (d *Descriptor) NewResourceChange() gotenresource.ResourceChange {
	return d.NewZoneChange()
}

func (d *Descriptor) NewZoneQueryResultSnapshot() *QueryResultSnapshot {
	return &QueryResultSnapshot{}
}

func (d *Descriptor) NewQueryResultSnapshot() gotenresource.QueryResultSnapshot {
	return d.NewZoneQueryResultSnapshot()
}
func (d *Descriptor) NewZoneQueryResultChange() *QueryResultChange {
	return &QueryResultChange{}
}

func (d *Descriptor) NewSearchQueryResultSnapshot() gotenresource.SearchQueryResultSnapshot {
	return nil
}

func (d *Descriptor) NewQueryResultChange() gotenresource.QueryResultChange {
	return d.NewZoneQueryResultChange()
}

func (d *Descriptor) NewZoneList(size, reserved int) ZoneList {
	return make(ZoneList, size, reserved)
}

func (d *Descriptor) NewResourceList(size, reserved int) gotenresource.ResourceList {
	return make(ZoneList, size, reserved)
}
func (d *Descriptor) NewZoneChangeList(size, reserved int) ZoneChangeList {
	return make(ZoneChangeList, size, reserved)
}

func (d *Descriptor) NewResourceChangeList(size, reserved int) gotenresource.ResourceChangeList {
	return make(ZoneChangeList, size, reserved)
}

func (d *Descriptor) NewZoneNameList(size, reserved int) ZoneNameList {
	return make(ZoneNameList, size, reserved)
}

func (d *Descriptor) NewNameList(size, reserved int) gotenresource.NameList {
	return make(ZoneNameList, size, reserved)
}

func (d *Descriptor) NewZoneReferenceList(size, reserved int) ZoneReferenceList {
	return make(ZoneReferenceList, size, reserved)
}

func (d *Descriptor) NewReferenceList(size, reserved int) gotenresource.ReferenceList {
	return make(ZoneReferenceList, size, reserved)
}
func (d *Descriptor) NewZoneParentNameList(size, reserved int) ZoneParentNameList {
	return make(ZoneParentNameList, size, reserved)
}

func (d *Descriptor) NewParentNameList(size, reserved int) gotenresource.ParentNameList {
	return make(ZoneParentNameList, size, reserved)
}
func (d *Descriptor) NewZoneParentReferenceList(size, reserved int) ZoneParentReferenceList {
	return make(ZoneParentReferenceList, size, reserved)
}

func (d *Descriptor) NewParentReferenceList(size, reserved int) gotenresource.ParentReferenceList {
	return make(ZoneParentReferenceList, size, reserved)
}

func (d *Descriptor) NewZoneMap(reserved int) ZoneMap {
	return make(ZoneMap, reserved)
}

func (d *Descriptor) NewResourceMap(reserved int) gotenresource.ResourceMap {
	return make(ZoneMap, reserved)
}
func (d *Descriptor) NewZoneChangeMap(reserved int) ZoneChangeMap {
	return make(ZoneChangeMap, reserved)
}

func (d *Descriptor) NewResourceChangeMap(reserved int) gotenresource.ResourceChangeMap {
	return make(ZoneChangeMap, reserved)
}

func (d *Descriptor) GetResourceTypeName() *gotenresource.TypeName {
	return d.typeName
}

func (d *Descriptor) GetNameDescriptor() *gotenresource.NameDescriptor {
	return d.nameDescriptor
}

func (d *Descriptor) ParseFieldPath(raw string) (gotenobject.FieldPath, error) {
	return ParseZone_FieldPath(raw)
}

func (d *Descriptor) ParseZoneName(nameStr string) (*Name, error) {
	return ParseName(nameStr)
}

func (d *Descriptor) ParseResourceName(nameStr string) (gotenresource.Name, error) {
	return ParseName(nameStr)
}
