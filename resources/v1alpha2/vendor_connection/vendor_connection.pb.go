// Code generated by protoc-gen-goten-go
// File: workplace/proto/v1alpha2/vendor_connection.proto
// DO NOT EDIT!!!

package vendor_connection

import (
	"fmt"
	"reflect"
	"sync"

	"google.golang.org/protobuf/encoding/protojson"
	"google.golang.org/protobuf/proto"
	preflect "google.golang.org/protobuf/reflect/protoreflect"
	"google.golang.org/protobuf/runtime/protoimpl"
)

// proto imports
import (
	ntt_meta "github.com/cloudwan/edgelq-sdk/common/types/meta"
	iam_project "github.com/cloudwan/edgelq-sdk/iam/resources/v1alpha2/project"
	workplace_common "github.com/cloudwan/workplace-sdk/resources/v1alpha2/common"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = fmt.Errorf
	_ = reflect.Method{}
	_ = sync.Once{}

	_ = protojson.MarshalOptions{}
	_ = proto.MarshalOptions{}
	_ = preflect.Value{}
	_ = protoimpl.DescBuilder{}
)

// make sure we're using proto imports
var (
	_ = &ntt_meta.Meta{}
	_ = &iam_project.Project{}
	_ = &workplace_common.BBox{}
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PointGrab_Telemetry_NotificationType int32

const (
	PointGrab_Telemetry_NOTIFICATION_TYPE_UNSPECIFIED PointGrab_Telemetry_NotificationType = 0
	PointGrab_Telemetry_COUNTING                      PointGrab_Telemetry_NotificationType = 1
	PointGrab_Telemetry_TRAFFIC                       PointGrab_Telemetry_NotificationType = 2
	PointGrab_Telemetry_HEATMAP                       PointGrab_Telemetry_NotificationType = 3
	PointGrab_Telemetry_XY                            PointGrab_Telemetry_NotificationType = 4
)

var (
	PointGrab_Telemetry_NotificationType_name = map[int32]string{
		0: "NOTIFICATION_TYPE_UNSPECIFIED",
		1: "COUNTING",
		2: "TRAFFIC",
		3: "HEATMAP",
		4: "XY",
	}

	PointGrab_Telemetry_NotificationType_value = map[string]int32{
		"NOTIFICATION_TYPE_UNSPECIFIED": 0,
		"COUNTING":                      1,
		"TRAFFIC":                       2,
		"HEATMAP":                       3,
		"XY":                            4,
	}
)

func (x PointGrab_Telemetry_NotificationType) Enum() *PointGrab_Telemetry_NotificationType {
	p := new(PointGrab_Telemetry_NotificationType)
	*p = x
	return p
}

func (x PointGrab_Telemetry_NotificationType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), preflect.EnumNumber(x))
}

func (PointGrab_Telemetry_NotificationType) Descriptor() preflect.EnumDescriptor {
	return workplace_proto_v1alpha2_vendor_connection_proto_enumTypes[0].Descriptor()
}

func (PointGrab_Telemetry_NotificationType) Type() preflect.EnumType {
	return &workplace_proto_v1alpha2_vendor_connection_proto_enumTypes[0]
}

func (x PointGrab_Telemetry_NotificationType) Number() preflect.EnumNumber {
	return preflect.EnumNumber(x)
}

// Deprecated, Use PointGrab_Telemetry_NotificationType.ProtoReflect.Descriptor instead.
func (PointGrab_Telemetry_NotificationType) EnumDescriptor() ([]byte, []int) {
	return workplace_proto_v1alpha2_vendor_connection_proto_rawDescGZIP(), []int{0, 0, 0}
}

type VendorConnection_Info_PointGrabInfo_TelemetrySubscription_NotificationType int32

const (
	VendorConnection_Info_PointGrabInfo_TelemetrySubscription_NOTIFICATION_TYPE_UNSPECIFIED VendorConnection_Info_PointGrabInfo_TelemetrySubscription_NotificationType = 0
	VendorConnection_Info_PointGrabInfo_TelemetrySubscription_COUNTING                      VendorConnection_Info_PointGrabInfo_TelemetrySubscription_NotificationType = 1
	VendorConnection_Info_PointGrabInfo_TelemetrySubscription_TRAFFIC                       VendorConnection_Info_PointGrabInfo_TelemetrySubscription_NotificationType = 2
	VendorConnection_Info_PointGrabInfo_TelemetrySubscription_HEATMAP                       VendorConnection_Info_PointGrabInfo_TelemetrySubscription_NotificationType = 3
	VendorConnection_Info_PointGrabInfo_TelemetrySubscription_XY                            VendorConnection_Info_PointGrabInfo_TelemetrySubscription_NotificationType = 4
)

var (
	VendorConnection_Info_PointGrabInfo_TelemetrySubscription_NotificationType_name = map[int32]string{
		0: "NOTIFICATION_TYPE_UNSPECIFIED",
		1: "COUNTING",
		2: "TRAFFIC",
		3: "HEATMAP",
		4: "XY",
	}

	VendorConnection_Info_PointGrabInfo_TelemetrySubscription_NotificationType_value = map[string]int32{
		"NOTIFICATION_TYPE_UNSPECIFIED": 0,
		"COUNTING":                      1,
		"TRAFFIC":                       2,
		"HEATMAP":                       3,
		"XY":                            4,
	}
)

func (x VendorConnection_Info_PointGrabInfo_TelemetrySubscription_NotificationType) Enum() *VendorConnection_Info_PointGrabInfo_TelemetrySubscription_NotificationType {
	p := new(VendorConnection_Info_PointGrabInfo_TelemetrySubscription_NotificationType)
	*p = x
	return p
}

func (x VendorConnection_Info_PointGrabInfo_TelemetrySubscription_NotificationType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), preflect.EnumNumber(x))
}

func (VendorConnection_Info_PointGrabInfo_TelemetrySubscription_NotificationType) Descriptor() preflect.EnumDescriptor {
	return workplace_proto_v1alpha2_vendor_connection_proto_enumTypes[1].Descriptor()
}

func (VendorConnection_Info_PointGrabInfo_TelemetrySubscription_NotificationType) Type() preflect.EnumType {
	return &workplace_proto_v1alpha2_vendor_connection_proto_enumTypes[1]
}

func (x VendorConnection_Info_PointGrabInfo_TelemetrySubscription_NotificationType) Number() preflect.EnumNumber {
	return preflect.EnumNumber(x)
}

// Deprecated, Use VendorConnection_Info_PointGrabInfo_TelemetrySubscription_NotificationType.ProtoReflect.Descriptor instead.
func (VendorConnection_Info_PointGrabInfo_TelemetrySubscription_NotificationType) EnumDescriptor() ([]byte, []int) {
	return workplace_proto_v1alpha2_vendor_connection_proto_rawDescGZIP(), []int{1, 1, 0, 0, 0}
}

// PointGrab
type PointGrab struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (m *PointGrab) Reset() {
	*m = PointGrab{}
	if protoimpl.UnsafeEnabled {
		mi := &workplace_proto_v1alpha2_vendor_connection_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		ms.StoreMessageInfo(mi)
	}
}

func (m *PointGrab) String() string {
	return protoimpl.X.MessageStringOf(m)
}

func (*PointGrab) ProtoMessage() {}

func (m *PointGrab) ProtoReflect() preflect.Message {
	mi := &workplace_proto_v1alpha2_vendor_connection_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && m != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(m)
}

func (*PointGrab) GotenMessage() {}

// Deprecated, Use PointGrab.ProtoReflect.Descriptor instead.
func (*PointGrab) Descriptor() ([]byte, []int) {
	return workplace_proto_v1alpha2_vendor_connection_proto_rawDescGZIP(), []int{0}
}

func (m *PointGrab) Unmarshal(b []byte) error {
	return proto.Unmarshal(b, m)
}

func (m *PointGrab) Marshal() ([]byte, error) {
	return proto.Marshal(m)
}

func (m *PointGrab) MarshalJSON() ([]byte, error) {
	return protojson.MarshalOptions{}.Marshal(m)
}

func (m *PointGrab) UnmarshalJSON(data []byte) error {
	return protojson.Unmarshal(data, m)
}

// VendorConnection Resource
type VendorConnection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
	// Name of VendorConnection
	Name *Name `protobuf:"bytes,1,opt,customtype=Name,name=name,proto3" json:"name,omitempty" firestore:"name"`
	// Display Name
	DisplayName string `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty" firestore:"displayName"`
	// Vendor type. Setting specific Vendor type requires setting corresponding
	// VendorConnectionSpec. Supported vendors:
	// - PointGrab
	Vendor workplace_common.Vendor `protobuf:"varint,3,opt,name=vendor,proto3,enum=ntt.workplace.v1alpha2.Vendor" json:"vendor,omitempty" firestore:"vendor"`
	// VendorConnection spec
	Spec     *VendorConnection_Spec `protobuf:"bytes,4,opt,name=spec,proto3" json:"spec,omitempty" firestore:"spec"`
	Info     *VendorConnection_Info `protobuf:"bytes,5,opt,name=info,proto3" json:"info,omitempty" firestore:"info"`
	Metadata *ntt_meta.Meta         `protobuf:"bytes,6,opt,name=metadata,proto3" json:"metadata,omitempty" firestore:"metadata"`
}

func (m *VendorConnection) Reset() {
	*m = VendorConnection{}
	if protoimpl.UnsafeEnabled {
		mi := &workplace_proto_v1alpha2_vendor_connection_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		ms.StoreMessageInfo(mi)
	}
}

func (m *VendorConnection) String() string {
	return protoimpl.X.MessageStringOf(m)
}

func (*VendorConnection) ProtoMessage() {}

func (m *VendorConnection) ProtoReflect() preflect.Message {
	mi := &workplace_proto_v1alpha2_vendor_connection_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && m != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(m)
}

func (*VendorConnection) GotenMessage() {}

// Deprecated, Use VendorConnection.ProtoReflect.Descriptor instead.
func (*VendorConnection) Descriptor() ([]byte, []int) {
	return workplace_proto_v1alpha2_vendor_connection_proto_rawDescGZIP(), []int{1}
}

func (m *VendorConnection) Unmarshal(b []byte) error {
	return proto.Unmarshal(b, m)
}

func (m *VendorConnection) Marshal() ([]byte, error) {
	return proto.Marshal(m)
}

func (m *VendorConnection) MarshalJSON() ([]byte, error) {
	return protojson.MarshalOptions{}.Marshal(m)
}

func (m *VendorConnection) UnmarshalJSON(data []byte) error {
	return protojson.Unmarshal(data, m)
}

func (m *VendorConnection) GetName() *Name {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *VendorConnection) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *VendorConnection) GetVendor() workplace_common.Vendor {
	if m != nil {
		return m.Vendor
	}
	return workplace_common.Vendor_VENDOR_UNSPECIFIED
}

func (m *VendorConnection) GetSpec() *VendorConnection_Spec {
	if m != nil {
		return m.Spec
	}
	return nil
}

func (m *VendorConnection) GetInfo() *VendorConnection_Info {
	if m != nil {
		return m.Info
	}
	return nil
}

func (m *VendorConnection) GetMetadata() *ntt_meta.Meta {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *VendorConnection) SetName(fv *Name) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "Name", "VendorConnection"))
	}
	m.Name = fv
}

func (m *VendorConnection) SetDisplayName(fv string) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "DisplayName", "VendorConnection"))
	}
	m.DisplayName = fv
}

func (m *VendorConnection) SetVendor(fv workplace_common.Vendor) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "Vendor", "VendorConnection"))
	}
	m.Vendor = fv
}

func (m *VendorConnection) SetSpec(fv *VendorConnection_Spec) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "Spec", "VendorConnection"))
	}
	m.Spec = fv
}

func (m *VendorConnection) SetInfo(fv *VendorConnection_Info) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "Info", "VendorConnection"))
	}
	m.Info = fv
}

func (m *VendorConnection) SetMetadata(fv *ntt_meta.Meta) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "Metadata", "VendorConnection"))
	}
	m.Metadata = fv
}

type PointGrab_Telemetry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (m *PointGrab_Telemetry) Reset() {
	*m = PointGrab_Telemetry{}
	if protoimpl.UnsafeEnabled {
		mi := &workplace_proto_v1alpha2_vendor_connection_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		ms.StoreMessageInfo(mi)
	}
}

func (m *PointGrab_Telemetry) String() string {
	return protoimpl.X.MessageStringOf(m)
}

func (*PointGrab_Telemetry) ProtoMessage() {}

func (m *PointGrab_Telemetry) ProtoReflect() preflect.Message {
	mi := &workplace_proto_v1alpha2_vendor_connection_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && m != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(m)
}

func (*PointGrab_Telemetry) GotenMessage() {}

// Deprecated, Use PointGrab_Telemetry.ProtoReflect.Descriptor instead.
func (*PointGrab_Telemetry) Descriptor() ([]byte, []int) {
	return workplace_proto_v1alpha2_vendor_connection_proto_rawDescGZIP(), []int{0, 0}
}

func (m *PointGrab_Telemetry) Unmarshal(b []byte) error {
	return proto.Unmarshal(b, m)
}

func (m *PointGrab_Telemetry) Marshal() ([]byte, error) {
	return proto.Marshal(m)
}

func (m *PointGrab_Telemetry) MarshalJSON() ([]byte, error) {
	return protojson.MarshalOptions{}.Marshal(m)
}

func (m *PointGrab_Telemetry) UnmarshalJSON(data []byte) error {
	return protojson.Unmarshal(data, m)
}

type VendorConnection_Spec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
	PointGrab     *VendorConnection_Spec_PointGrabSpec `protobuf:"bytes,1,opt,name=point_grab,json=pointGrab,proto3" json:"point_grab,omitempty" firestore:"pointGrab"`
}

func (m *VendorConnection_Spec) Reset() {
	*m = VendorConnection_Spec{}
	if protoimpl.UnsafeEnabled {
		mi := &workplace_proto_v1alpha2_vendor_connection_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		ms.StoreMessageInfo(mi)
	}
}

func (m *VendorConnection_Spec) String() string {
	return protoimpl.X.MessageStringOf(m)
}

func (*VendorConnection_Spec) ProtoMessage() {}

func (m *VendorConnection_Spec) ProtoReflect() preflect.Message {
	mi := &workplace_proto_v1alpha2_vendor_connection_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && m != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(m)
}

func (*VendorConnection_Spec) GotenMessage() {}

// Deprecated, Use VendorConnection_Spec.ProtoReflect.Descriptor instead.
func (*VendorConnection_Spec) Descriptor() ([]byte, []int) {
	return workplace_proto_v1alpha2_vendor_connection_proto_rawDescGZIP(), []int{1, 0}
}

func (m *VendorConnection_Spec) Unmarshal(b []byte) error {
	return proto.Unmarshal(b, m)
}

func (m *VendorConnection_Spec) Marshal() ([]byte, error) {
	return proto.Marshal(m)
}

func (m *VendorConnection_Spec) MarshalJSON() ([]byte, error) {
	return protojson.MarshalOptions{}.Marshal(m)
}

func (m *VendorConnection_Spec) UnmarshalJSON(data []byte) error {
	return protojson.Unmarshal(data, m)
}

func (m *VendorConnection_Spec) GetPointGrab() *VendorConnection_Spec_PointGrabSpec {
	if m != nil {
		return m.PointGrab
	}
	return nil
}

func (m *VendorConnection_Spec) SetPointGrab(fv *VendorConnection_Spec_PointGrabSpec) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "PointGrab", "VendorConnection_Spec"))
	}
	m.PointGrab = fv
}

type VendorConnection_Info struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
	// PointGrab info data
	Info *VendorConnection_Info_PointGrabInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty" firestore:"info"`
}

func (m *VendorConnection_Info) Reset() {
	*m = VendorConnection_Info{}
	if protoimpl.UnsafeEnabled {
		mi := &workplace_proto_v1alpha2_vendor_connection_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		ms.StoreMessageInfo(mi)
	}
}

func (m *VendorConnection_Info) String() string {
	return protoimpl.X.MessageStringOf(m)
}

func (*VendorConnection_Info) ProtoMessage() {}

func (m *VendorConnection_Info) ProtoReflect() preflect.Message {
	mi := &workplace_proto_v1alpha2_vendor_connection_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && m != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(m)
}

func (*VendorConnection_Info) GotenMessage() {}

// Deprecated, Use VendorConnection_Info.ProtoReflect.Descriptor instead.
func (*VendorConnection_Info) Descriptor() ([]byte, []int) {
	return workplace_proto_v1alpha2_vendor_connection_proto_rawDescGZIP(), []int{1, 1}
}

func (m *VendorConnection_Info) Unmarshal(b []byte) error {
	return proto.Unmarshal(b, m)
}

func (m *VendorConnection_Info) Marshal() ([]byte, error) {
	return proto.Marshal(m)
}

func (m *VendorConnection_Info) MarshalJSON() ([]byte, error) {
	return protojson.MarshalOptions{}.Marshal(m)
}

func (m *VendorConnection_Info) UnmarshalJSON(data []byte) error {
	return protojson.Unmarshal(data, m)
}

func (m *VendorConnection_Info) GetInfo() *VendorConnection_Info_PointGrabInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

func (m *VendorConnection_Info) SetInfo(fv *VendorConnection_Info_PointGrabInfo) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "Info", "VendorConnection_Info"))
	}
	m.Info = fv
}

type VendorConnection_Spec_PointGrabSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
	// endpoint url, e.g. https://cpms.pointgrab.com/be/cp
	Endpoint string `protobuf:"bytes,1,opt,name=endpoint,proto3" json:"endpoint,omitempty" firestore:"endpoint"`
	// Auth data
	Auth *VendorConnection_Spec_PointGrabSpec_Auth `protobuf:"bytes,2,opt,name=auth,proto3" json:"auth,omitempty" firestore:"auth"`
	//
	CallbackSpec *VendorConnection_Spec_PointGrabSpec_CallbackSpec `protobuf:"bytes,3,opt,name=callback_spec,json=callbackSpec,proto3" json:"callback_spec,omitempty" firestore:"callbackSpec"`
}

func (m *VendorConnection_Spec_PointGrabSpec) Reset() {
	*m = VendorConnection_Spec_PointGrabSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &workplace_proto_v1alpha2_vendor_connection_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		ms.StoreMessageInfo(mi)
	}
}

func (m *VendorConnection_Spec_PointGrabSpec) String() string {
	return protoimpl.X.MessageStringOf(m)
}

func (*VendorConnection_Spec_PointGrabSpec) ProtoMessage() {}

func (m *VendorConnection_Spec_PointGrabSpec) ProtoReflect() preflect.Message {
	mi := &workplace_proto_v1alpha2_vendor_connection_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && m != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(m)
}

func (*VendorConnection_Spec_PointGrabSpec) GotenMessage() {}

// Deprecated, Use VendorConnection_Spec_PointGrabSpec.ProtoReflect.Descriptor instead.
func (*VendorConnection_Spec_PointGrabSpec) Descriptor() ([]byte, []int) {
	return workplace_proto_v1alpha2_vendor_connection_proto_rawDescGZIP(), []int{1, 0, 0}
}

func (m *VendorConnection_Spec_PointGrabSpec) Unmarshal(b []byte) error {
	return proto.Unmarshal(b, m)
}

func (m *VendorConnection_Spec_PointGrabSpec) Marshal() ([]byte, error) {
	return proto.Marshal(m)
}

func (m *VendorConnection_Spec_PointGrabSpec) MarshalJSON() ([]byte, error) {
	return protojson.MarshalOptions{}.Marshal(m)
}

func (m *VendorConnection_Spec_PointGrabSpec) UnmarshalJSON(data []byte) error {
	return protojson.Unmarshal(data, m)
}

func (m *VendorConnection_Spec_PointGrabSpec) GetEndpoint() string {
	if m != nil {
		return m.Endpoint
	}
	return ""
}

func (m *VendorConnection_Spec_PointGrabSpec) GetAuth() *VendorConnection_Spec_PointGrabSpec_Auth {
	if m != nil {
		return m.Auth
	}
	return nil
}

func (m *VendorConnection_Spec_PointGrabSpec) GetCallbackSpec() *VendorConnection_Spec_PointGrabSpec_CallbackSpec {
	if m != nil {
		return m.CallbackSpec
	}
	return nil
}

func (m *VendorConnection_Spec_PointGrabSpec) SetEndpoint(fv string) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "Endpoint", "VendorConnection_Spec_PointGrabSpec"))
	}
	m.Endpoint = fv
}

func (m *VendorConnection_Spec_PointGrabSpec) SetAuth(fv *VendorConnection_Spec_PointGrabSpec_Auth) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "Auth", "VendorConnection_Spec_PointGrabSpec"))
	}
	m.Auth = fv
}

func (m *VendorConnection_Spec_PointGrabSpec) SetCallbackSpec(fv *VendorConnection_Spec_PointGrabSpec_CallbackSpec) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "CallbackSpec", "VendorConnection_Spec_PointGrabSpec"))
	}
	m.CallbackSpec = fv
}

type VendorConnection_Spec_PointGrabSpec_Auth struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
	// application id
	Application string `protobuf:"bytes,1,opt,name=application,proto3" json:"application,omitempty" firestore:"application"`
	// secret
	Secret string `protobuf:"bytes,2,opt,name=secret,proto3" json:"secret,omitempty" firestore:"secret"`
	// token endpoint url, e.g.
	// https://cpms.pointgrab.com/be/cp/oauth2/token
	TokenEndpoint string `protobuf:"bytes,3,opt,name=token_endpoint,json=tokenEndpoint,proto3" json:"token_endpoint,omitempty" firestore:"tokenEndpoint"`
}

func (m *VendorConnection_Spec_PointGrabSpec_Auth) Reset() {
	*m = VendorConnection_Spec_PointGrabSpec_Auth{}
	if protoimpl.UnsafeEnabled {
		mi := &workplace_proto_v1alpha2_vendor_connection_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		ms.StoreMessageInfo(mi)
	}
}

func (m *VendorConnection_Spec_PointGrabSpec_Auth) String() string {
	return protoimpl.X.MessageStringOf(m)
}

func (*VendorConnection_Spec_PointGrabSpec_Auth) ProtoMessage() {}

func (m *VendorConnection_Spec_PointGrabSpec_Auth) ProtoReflect() preflect.Message {
	mi := &workplace_proto_v1alpha2_vendor_connection_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && m != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(m)
}

func (*VendorConnection_Spec_PointGrabSpec_Auth) GotenMessage() {}

// Deprecated, Use VendorConnection_Spec_PointGrabSpec_Auth.ProtoReflect.Descriptor instead.
func (*VendorConnection_Spec_PointGrabSpec_Auth) Descriptor() ([]byte, []int) {
	return workplace_proto_v1alpha2_vendor_connection_proto_rawDescGZIP(), []int{1, 0, 0, 0}
}

func (m *VendorConnection_Spec_PointGrabSpec_Auth) Unmarshal(b []byte) error {
	return proto.Unmarshal(b, m)
}

func (m *VendorConnection_Spec_PointGrabSpec_Auth) Marshal() ([]byte, error) {
	return proto.Marshal(m)
}

func (m *VendorConnection_Spec_PointGrabSpec_Auth) MarshalJSON() ([]byte, error) {
	return protojson.MarshalOptions{}.Marshal(m)
}

func (m *VendorConnection_Spec_PointGrabSpec_Auth) UnmarshalJSON(data []byte) error {
	return protojson.Unmarshal(data, m)
}

func (m *VendorConnection_Spec_PointGrabSpec_Auth) GetApplication() string {
	if m != nil {
		return m.Application
	}
	return ""
}

func (m *VendorConnection_Spec_PointGrabSpec_Auth) GetSecret() string {
	if m != nil {
		return m.Secret
	}
	return ""
}

func (m *VendorConnection_Spec_PointGrabSpec_Auth) GetTokenEndpoint() string {
	if m != nil {
		return m.TokenEndpoint
	}
	return ""
}

func (m *VendorConnection_Spec_PointGrabSpec_Auth) SetApplication(fv string) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "Application", "VendorConnection_Spec_PointGrabSpec_Auth"))
	}
	m.Application = fv
}

func (m *VendorConnection_Spec_PointGrabSpec_Auth) SetSecret(fv string) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "Secret", "VendorConnection_Spec_PointGrabSpec_Auth"))
	}
	m.Secret = fv
}

func (m *VendorConnection_Spec_PointGrabSpec_Auth) SetTokenEndpoint(fv string) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "TokenEndpoint", "VendorConnection_Spec_PointGrabSpec_Auth"))
	}
	m.TokenEndpoint = fv
}

// CallbackSpec
type VendorConnection_Spec_PointGrabSpec_CallbackSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
	// Notification auth settings
	AuthToken *VendorConnection_Spec_PointGrabSpec_CallbackSpec_AuthToken `protobuf:"bytes,1,opt,name=auth_token,json=authToken,proto3" json:"auth_token,omitempty" firestore:"authToken"`
}

func (m *VendorConnection_Spec_PointGrabSpec_CallbackSpec) Reset() {
	*m = VendorConnection_Spec_PointGrabSpec_CallbackSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &workplace_proto_v1alpha2_vendor_connection_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		ms.StoreMessageInfo(mi)
	}
}

func (m *VendorConnection_Spec_PointGrabSpec_CallbackSpec) String() string {
	return protoimpl.X.MessageStringOf(m)
}

func (*VendorConnection_Spec_PointGrabSpec_CallbackSpec) ProtoMessage() {}

func (m *VendorConnection_Spec_PointGrabSpec_CallbackSpec) ProtoReflect() preflect.Message {
	mi := &workplace_proto_v1alpha2_vendor_connection_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && m != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(m)
}

func (*VendorConnection_Spec_PointGrabSpec_CallbackSpec) GotenMessage() {}

// Deprecated, Use VendorConnection_Spec_PointGrabSpec_CallbackSpec.ProtoReflect.Descriptor instead.
func (*VendorConnection_Spec_PointGrabSpec_CallbackSpec) Descriptor() ([]byte, []int) {
	return workplace_proto_v1alpha2_vendor_connection_proto_rawDescGZIP(), []int{1, 0, 0, 1}
}

func (m *VendorConnection_Spec_PointGrabSpec_CallbackSpec) Unmarshal(b []byte) error {
	return proto.Unmarshal(b, m)
}

func (m *VendorConnection_Spec_PointGrabSpec_CallbackSpec) Marshal() ([]byte, error) {
	return proto.Marshal(m)
}

func (m *VendorConnection_Spec_PointGrabSpec_CallbackSpec) MarshalJSON() ([]byte, error) {
	return protojson.MarshalOptions{}.Marshal(m)
}

func (m *VendorConnection_Spec_PointGrabSpec_CallbackSpec) UnmarshalJSON(data []byte) error {
	return protojson.Unmarshal(data, m)
}

func (m *VendorConnection_Spec_PointGrabSpec_CallbackSpec) GetAuthToken() *VendorConnection_Spec_PointGrabSpec_CallbackSpec_AuthToken {
	if m != nil {
		return m.AuthToken
	}
	return nil
}

func (m *VendorConnection_Spec_PointGrabSpec_CallbackSpec) SetAuthToken(fv *VendorConnection_Spec_PointGrabSpec_CallbackSpec_AuthToken) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "AuthToken", "VendorConnection_Spec_PointGrabSpec_CallbackSpec"))
	}
	m.AuthToken = fv
}

type VendorConnection_Spec_PointGrabSpec_CallbackSpec_AuthToken struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
	// Token header, e.g. "X-Auth-Token"
	TokenHeader string `protobuf:"bytes,1,opt,name=token_header,json=tokenHeader,proto3" json:"token_header,omitempty" firestore:"tokenHeader"`
	// Token value, provided to PointGrab PUSH subscription to
	// authenticate it
	TokenValue string `protobuf:"bytes,2,opt,name=token_value,json=tokenValue,proto3" json:"token_value,omitempty" firestore:"tokenValue"`
}

func (m *VendorConnection_Spec_PointGrabSpec_CallbackSpec_AuthToken) Reset() {
	*m = VendorConnection_Spec_PointGrabSpec_CallbackSpec_AuthToken{}
	if protoimpl.UnsafeEnabled {
		mi := &workplace_proto_v1alpha2_vendor_connection_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		ms.StoreMessageInfo(mi)
	}
}

func (m *VendorConnection_Spec_PointGrabSpec_CallbackSpec_AuthToken) String() string {
	return protoimpl.X.MessageStringOf(m)
}

func (*VendorConnection_Spec_PointGrabSpec_CallbackSpec_AuthToken) ProtoMessage() {}

func (m *VendorConnection_Spec_PointGrabSpec_CallbackSpec_AuthToken) ProtoReflect() preflect.Message {
	mi := &workplace_proto_v1alpha2_vendor_connection_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && m != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(m)
}

func (*VendorConnection_Spec_PointGrabSpec_CallbackSpec_AuthToken) GotenMessage() {}

// Deprecated, Use VendorConnection_Spec_PointGrabSpec_CallbackSpec_AuthToken.ProtoReflect.Descriptor instead.
func (*VendorConnection_Spec_PointGrabSpec_CallbackSpec_AuthToken) Descriptor() ([]byte, []int) {
	return workplace_proto_v1alpha2_vendor_connection_proto_rawDescGZIP(), []int{1, 0, 0, 1, 0}
}

func (m *VendorConnection_Spec_PointGrabSpec_CallbackSpec_AuthToken) Unmarshal(b []byte) error {
	return proto.Unmarshal(b, m)
}

func (m *VendorConnection_Spec_PointGrabSpec_CallbackSpec_AuthToken) Marshal() ([]byte, error) {
	return proto.Marshal(m)
}

func (m *VendorConnection_Spec_PointGrabSpec_CallbackSpec_AuthToken) MarshalJSON() ([]byte, error) {
	return protojson.MarshalOptions{}.Marshal(m)
}

func (m *VendorConnection_Spec_PointGrabSpec_CallbackSpec_AuthToken) UnmarshalJSON(data []byte) error {
	return protojson.Unmarshal(data, m)
}

func (m *VendorConnection_Spec_PointGrabSpec_CallbackSpec_AuthToken) GetTokenHeader() string {
	if m != nil {
		return m.TokenHeader
	}
	return ""
}

func (m *VendorConnection_Spec_PointGrabSpec_CallbackSpec_AuthToken) GetTokenValue() string {
	if m != nil {
		return m.TokenValue
	}
	return ""
}

func (m *VendorConnection_Spec_PointGrabSpec_CallbackSpec_AuthToken) SetTokenHeader(fv string) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "TokenHeader", "VendorConnection_Spec_PointGrabSpec_CallbackSpec_AuthToken"))
	}
	m.TokenHeader = fv
}

func (m *VendorConnection_Spec_PointGrabSpec_CallbackSpec_AuthToken) SetTokenValue(fv string) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "TokenValue", "VendorConnection_Spec_PointGrabSpec_CallbackSpec_AuthToken"))
	}
	m.TokenValue = fv
}

type VendorConnection_Info_PointGrabInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
	// List of subscriptions
	TelemetrySubscriptions []*VendorConnection_Info_PointGrabInfo_TelemetrySubscription `protobuf:"bytes,1,rep,name=telemetry_subscriptions,json=telemetrySubscriptions,proto3" json:"telemetry_subscriptions,omitempty" firestore:"telemetrySubscriptions"`
}

func (m *VendorConnection_Info_PointGrabInfo) Reset() {
	*m = VendorConnection_Info_PointGrabInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &workplace_proto_v1alpha2_vendor_connection_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		ms.StoreMessageInfo(mi)
	}
}

func (m *VendorConnection_Info_PointGrabInfo) String() string {
	return protoimpl.X.MessageStringOf(m)
}

func (*VendorConnection_Info_PointGrabInfo) ProtoMessage() {}

func (m *VendorConnection_Info_PointGrabInfo) ProtoReflect() preflect.Message {
	mi := &workplace_proto_v1alpha2_vendor_connection_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && m != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(m)
}

func (*VendorConnection_Info_PointGrabInfo) GotenMessage() {}

// Deprecated, Use VendorConnection_Info_PointGrabInfo.ProtoReflect.Descriptor instead.
func (*VendorConnection_Info_PointGrabInfo) Descriptor() ([]byte, []int) {
	return workplace_proto_v1alpha2_vendor_connection_proto_rawDescGZIP(), []int{1, 1, 0}
}

func (m *VendorConnection_Info_PointGrabInfo) Unmarshal(b []byte) error {
	return proto.Unmarshal(b, m)
}

func (m *VendorConnection_Info_PointGrabInfo) Marshal() ([]byte, error) {
	return proto.Marshal(m)
}

func (m *VendorConnection_Info_PointGrabInfo) MarshalJSON() ([]byte, error) {
	return protojson.MarshalOptions{}.Marshal(m)
}

func (m *VendorConnection_Info_PointGrabInfo) UnmarshalJSON(data []byte) error {
	return protojson.Unmarshal(data, m)
}

func (m *VendorConnection_Info_PointGrabInfo) GetTelemetrySubscriptions() []*VendorConnection_Info_PointGrabInfo_TelemetrySubscription {
	if m != nil {
		return m.TelemetrySubscriptions
	}
	return nil
}

func (m *VendorConnection_Info_PointGrabInfo) SetTelemetrySubscriptions(fv []*VendorConnection_Info_PointGrabInfo_TelemetrySubscription) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "TelemetrySubscriptions", "VendorConnection_Info_PointGrabInfo"))
	}
	m.TelemetrySubscriptions = fv
}

type VendorConnection_Info_PointGrabInfo_TelemetrySubscription struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
	// Telemetry Subscription Id
	SubscriptionId string `protobuf:"bytes,1,opt,name=subscription_id,json=subscriptionId,proto3" json:"subscription_id,omitempty" firestore:"subscriptionId"`
	// NotificationType of this subscription
	NotificationType VendorConnection_Info_PointGrabInfo_TelemetrySubscription_NotificationType `protobuf:"varint,2,opt,name=notification_type,json=notificationType,proto3,enum=ntt.workplace.v1alpha2.VendorConnection_Info_PointGrabInfo_TelemetrySubscription_NotificationType" json:"notification_type,omitempty" firestore:"notificationType"`
}

func (m *VendorConnection_Info_PointGrabInfo_TelemetrySubscription) Reset() {
	*m = VendorConnection_Info_PointGrabInfo_TelemetrySubscription{}
	if protoimpl.UnsafeEnabled {
		mi := &workplace_proto_v1alpha2_vendor_connection_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		ms.StoreMessageInfo(mi)
	}
}

func (m *VendorConnection_Info_PointGrabInfo_TelemetrySubscription) String() string {
	return protoimpl.X.MessageStringOf(m)
}

func (*VendorConnection_Info_PointGrabInfo_TelemetrySubscription) ProtoMessage() {}

func (m *VendorConnection_Info_PointGrabInfo_TelemetrySubscription) ProtoReflect() preflect.Message {
	mi := &workplace_proto_v1alpha2_vendor_connection_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && m != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(m))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(m)
}

func (*VendorConnection_Info_PointGrabInfo_TelemetrySubscription) GotenMessage() {}

// Deprecated, Use VendorConnection_Info_PointGrabInfo_TelemetrySubscription.ProtoReflect.Descriptor instead.
func (*VendorConnection_Info_PointGrabInfo_TelemetrySubscription) Descriptor() ([]byte, []int) {
	return workplace_proto_v1alpha2_vendor_connection_proto_rawDescGZIP(), []int{1, 1, 0, 0}
}

func (m *VendorConnection_Info_PointGrabInfo_TelemetrySubscription) Unmarshal(b []byte) error {
	return proto.Unmarshal(b, m)
}

func (m *VendorConnection_Info_PointGrabInfo_TelemetrySubscription) Marshal() ([]byte, error) {
	return proto.Marshal(m)
}

func (m *VendorConnection_Info_PointGrabInfo_TelemetrySubscription) MarshalJSON() ([]byte, error) {
	return protojson.MarshalOptions{}.Marshal(m)
}

func (m *VendorConnection_Info_PointGrabInfo_TelemetrySubscription) UnmarshalJSON(data []byte) error {
	return protojson.Unmarshal(data, m)
}

func (m *VendorConnection_Info_PointGrabInfo_TelemetrySubscription) GetSubscriptionId() string {
	if m != nil {
		return m.SubscriptionId
	}
	return ""
}

func (m *VendorConnection_Info_PointGrabInfo_TelemetrySubscription) GetNotificationType() VendorConnection_Info_PointGrabInfo_TelemetrySubscription_NotificationType {
	if m != nil {
		return m.NotificationType
	}
	return VendorConnection_Info_PointGrabInfo_TelemetrySubscription_NOTIFICATION_TYPE_UNSPECIFIED
}

func (m *VendorConnection_Info_PointGrabInfo_TelemetrySubscription) SetSubscriptionId(fv string) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "SubscriptionId", "VendorConnection_Info_PointGrabInfo_TelemetrySubscription"))
	}
	m.SubscriptionId = fv
}

func (m *VendorConnection_Info_PointGrabInfo_TelemetrySubscription) SetNotificationType(fv VendorConnection_Info_PointGrabInfo_TelemetrySubscription_NotificationType) {
	if m == nil {
		panic(fmt.Errorf("can't set %s on nil %s", "NotificationType", "VendorConnection_Info_PointGrabInfo_TelemetrySubscription"))
	}
	m.NotificationType = fv
}

var workplace_proto_v1alpha2_vendor_connection_proto preflect.FileDescriptor

var workplace_proto_v1alpha2_vendor_connection_proto_rawDesc = []byte{
	0x0a, 0x30, 0x77, 0x6f, 0x72, 0x6b, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32, 0x2f, 0x76, 0x65, 0x6e, 0x64, 0x6f,
	0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x16, 0x6e, 0x74, 0x74, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x70, 0x6c, 0x61, 0x63,
	0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x67, 0x6f, 0x74, 0x65, 0x6e, 0x2f, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x67, 0x6f, 0x74, 0x65, 0x6e, 0x2f, 0x61,
	0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x67, 0x6f, 0x74, 0x65, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x67, 0x6f, 0x74, 0x65, 0x6e, 0x2f, 0x61, 0x6e,
	0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x67, 0x6f, 0x74, 0x65, 0x6e, 0x2f,
	0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x74, 0x65, 0x6e, 0x2f, 0x61,
	0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x65, 0x64, 0x67, 0x65, 0x6c, 0x71, 0x2f,
	0x69, 0x61, 0x6d, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f,
	0x69, 0x61, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x24, 0x65, 0x64, 0x67, 0x65, 0x6c,
	0x71, 0x2f, 0x61, 0x75, 0x64, 0x69, 0x74, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x75, 0x64, 0x69, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x34, 0x65, 0x64, 0x67, 0x65, 0x6c, 0x71, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x2f, 0x63, 0x6f, 0x6d,
	0x70, 0x69, 0x6c, 0x65, 0x72, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2f, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x25, 0x77, 0x6f, 0x72, 0x6b, 0x70, 0x6c, 0x61, 0x63, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32, 0x2f,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x65, 0x64,
	0x67, 0x65, 0x6c, 0x71, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x7f, 0x0a, 0x09,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x47, 0x72, 0x61, 0x62, 0x1a, 0x72, 0x0a, 0x09, 0x54, 0x65, 0x6c,
	0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x22, 0x65, 0x0a, 0x10, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x1d, 0x4e, 0x4f,
	0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0c, 0x0a,
	0x08, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x54,
	0x52, 0x41, 0x46, 0x46, 0x49, 0x43, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x48, 0x45, 0x41, 0x54,
	0x4d, 0x41, 0x50, 0x10, 0x03, 0x12, 0x06, 0x0a, 0x02, 0x58, 0x59, 0x10, 0x04, 0x22, 0xcc, 0x0e,
	0x0a, 0x10, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x18, 0xb2, 0xda, 0x21, 0x14, 0x0a, 0x12, 0x0a, 0x10, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x36, 0x0a, 0x06, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x6e, 0x74, 0x74, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x70, 0x6c,
	0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32, 0x2e, 0x56, 0x65, 0x6e,
	0x64, 0x6f, 0x72, 0x52, 0x06, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x12, 0x41, 0x0a, 0x04, 0x73,
	0x70, 0x65, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x6e, 0x74, 0x74, 0x2e,
	0x77, 0x6f, 0x72, 0x6b, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x32, 0x2e, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x12, 0x41,
	0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x6e,
	0x74, 0x74, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x32, 0x2e, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66,
	0x6f, 0x12, 0x2b, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6e, 0x74, 0x74, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x4d, 0x65, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x93,
	0x05, 0x0a, 0x04, 0x53, 0x70, 0x65, 0x63, 0x12, 0x5a, 0x0a, 0x0a, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x5f, 0x67, 0x72, 0x61, 0x62, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x6e, 0x74,
	0x74, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x32, 0x2e, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x47, 0x72, 0x61, 0x62, 0x53, 0x70, 0x65, 0x63, 0x52, 0x09, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x47,
	0x72, 0x61, 0x62, 0x1a, 0xae, 0x04, 0x0a, 0x0d, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x47, 0x72, 0x61,
	0x62, 0x53, 0x70, 0x65, 0x63, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x12, 0x54, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x40, 0x2e, 0x6e, 0x74, 0x74, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32, 0x2e, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x47, 0x72, 0x61, 0x62, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x41, 0x75, 0x74,
	0x68, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x12, 0x6d, 0x0a, 0x0d, 0x63, 0x61, 0x6c, 0x6c, 0x62,
	0x61, 0x63, 0x6b, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x48,
	0x2e, 0x6e, 0x74, 0x74, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32, 0x2e, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x47, 0x72, 0x61, 0x62, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x43, 0x61, 0x6c, 0x6c,
	0x62, 0x61, 0x63, 0x6b, 0x53, 0x70, 0x65, 0x63, 0x52, 0x0c, 0x63, 0x61, 0x6c, 0x6c, 0x62, 0x61,
	0x63, 0x6b, 0x53, 0x70, 0x65, 0x63, 0x1a, 0x67, 0x0a, 0x04, 0x41, 0x75, 0x74, 0x68, 0x12, 0x20,
	0x0a, 0x0b, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x5f, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x1a,
	0xd2, 0x01, 0x0a, 0x0c, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x53, 0x70, 0x65, 0x63,
	0x12, 0x71, 0x0a, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x52, 0x2e, 0x6e, 0x74, 0x74, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x70,
	0x6c, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32, 0x2e, 0x56, 0x65,
	0x6e, 0x64, 0x6f, 0x72, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53,
	0x70, 0x65, 0x63, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x47, 0x72, 0x61, 0x62, 0x53, 0x70, 0x65,
	0x63, 0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x41,
	0x75, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x09, 0x61, 0x75, 0x74, 0x68, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x1a, 0x4f, 0x0a, 0x09, 0x41, 0x75, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x48, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x1a, 0xb2, 0x04, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x4f, 0x0a,
	0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x6e, 0x74,
	0x74, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x32, 0x2e, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x47, 0x72, 0x61, 0x62, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x1a, 0xd8,
	0x03, 0x0a, 0x0d, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x47, 0x72, 0x61, 0x62, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x8a, 0x01, 0x0a, 0x17, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x5f, 0x73,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x51, 0x2e, 0x6e, 0x74, 0x74, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x70, 0x6c, 0x61,
	0x63, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32, 0x2e, 0x56, 0x65, 0x6e, 0x64,
	0x6f, 0x72, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x49, 0x6e, 0x66,
	0x6f, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x47, 0x72, 0x61, 0x62, 0x49, 0x6e, 0x66, 0x6f, 0x2e,
	0x54, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x16, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0xb9, 0x02,
	0x0a, 0x15, 0x54, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x12, 0x8f, 0x01, 0x0a, 0x11, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x62, 0x2e, 0x6e,
	0x74, 0x74, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x32, 0x2e, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x47, 0x72, 0x61, 0x62, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x54, 0x65, 0x6c, 0x65, 0x6d, 0x65,
	0x74, 0x72, 0x79, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x10, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x22, 0x65, 0x0a, 0x10, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x1d, 0x4e, 0x4f, 0x54, 0x49, 0x46, 0x49,
	0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50,
	0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4f, 0x55,
	0x4e, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x54, 0x52, 0x41, 0x46, 0x46,
	0x49, 0x43, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x48, 0x45, 0x41, 0x54, 0x4d, 0x41, 0x50, 0x10,
	0x03, 0x12, 0x06, 0x0a, 0x02, 0x58, 0x59, 0x10, 0x04, 0x3a, 0xb0, 0x02, 0xea, 0x41, 0x61, 0x0a,
	0x25, 0x77, 0x6f, 0x72, 0x6b, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x6c,
	0x71, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x38, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73,
	0x2f, 0x7b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x7d, 0x2f, 0x76, 0x65, 0x6e, 0x64, 0x6f,
	0x72, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x7b, 0x76, 0x65,
	0x6e, 0x64, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x7d,
	0x92, 0xd9, 0x21, 0x46, 0x0a, 0x11, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x11, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x18, 0x6e, 0x74, 0x74, 0x2e,
	0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32, 0x2f, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x22, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0xda, 0x94, 0x23, 0x08, 0x12, 0x06,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0xc2, 0x85, 0x2c, 0x72, 0x1a, 0x14, 0x73, 0x70, 0x65, 0x63,
	0x2e, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x67, 0x72, 0x61, 0x62, 0x2e, 0x61, 0x75, 0x74, 0x68,
	0x1a, 0x28, 0x73, 0x70, 0x65, 0x63, 0x2e, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x67, 0x72, 0x61,
	0x62, 0x2e, 0x63, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x2e,
	0x61, 0x75, 0x74, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x22, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x06,
	0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x22, 0x04, 0x73, 0x70, 0x65, 0x63, 0x22, 0x04, 0x69, 0x6e,
	0x66, 0x6f, 0x42, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x42, 0x80, 0x04, 0xe8,
	0xde, 0x21, 0x01, 0xd2, 0xff, 0xd0, 0x02, 0x59, 0x0a, 0x17, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72,
	0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x12, 0x3e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x77, 0x61, 0x6e, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x70, 0x6c, 0x61, 0x63, 0x65,
	0x2f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32, 0x2f,
	0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x0a, 0x1d, 0x63, 0x6f, 0x6d, 0x2e, 0x6e, 0x74, 0x74, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x70,
	0x6c, 0x61, 0x63, 0x65, 0x2e, 0x70, 0x62, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32,
	0x42, 0x15, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x54, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x77, 0x61, 0x6e, 0x2f, 0x77,
	0x6f, 0x72, 0x6b, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x73, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32, 0x2f, 0x76, 0x65, 0x6e, 0x64,
	0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x3b, 0x76, 0x65,
	0x6e, 0x64, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0xd2,
	0x84, 0xd1, 0x02, 0x45, 0x0a, 0x0d, 0x61, 0x75, 0x64, 0x69, 0x74, 0x68, 0x61, 0x6e, 0x64, 0x6c,
	0x65, 0x72, 0x73, 0x12, 0x34, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x77, 0x61, 0x6e, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x70, 0x6c, 0x61,
	0x63, 0x65, 0x2f, 0x61, 0x75, 0x64, 0x69, 0x74, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x73,
	0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32, 0xf2, 0x85, 0xd1, 0x02, 0x61, 0x0a, 0x1b,
	0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x64, 0x62, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x65, 0x72, 0x12, 0x42, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x77, 0x61, 0x6e,
	0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x2f, 0x64, 0x62, 0x5f, 0x73, 0x79,
	0x6e, 0x63, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32, 0x2f, 0x76, 0x65,
	0x6e, 0x64, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0xa2,
	0x80, 0xd1, 0x02, 0x5b, 0x0a, 0x18, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x3f,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x77, 0x61, 0x6e, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x2f, 0x61, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32, 0x2f, 0x76, 0x65,
	0x6e, 0x64, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	workplace_proto_v1alpha2_vendor_connection_proto_rawDescOnce sync.Once
	workplace_proto_v1alpha2_vendor_connection_proto_rawDescData = workplace_proto_v1alpha2_vendor_connection_proto_rawDesc
)

func workplace_proto_v1alpha2_vendor_connection_proto_rawDescGZIP() []byte {
	workplace_proto_v1alpha2_vendor_connection_proto_rawDescOnce.Do(func() {
		workplace_proto_v1alpha2_vendor_connection_proto_rawDescData = protoimpl.X.CompressGZIP(workplace_proto_v1alpha2_vendor_connection_proto_rawDescData)
	})
	return workplace_proto_v1alpha2_vendor_connection_proto_rawDescData
}

var workplace_proto_v1alpha2_vendor_connection_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var workplace_proto_v1alpha2_vendor_connection_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var workplace_proto_v1alpha2_vendor_connection_proto_goTypes = []interface{}{
	(PointGrab_Telemetry_NotificationType)(0),                                       // 0: ntt.workplace.v1alpha2.PointGrab_Telemetry_NotificationType
	(VendorConnection_Info_PointGrabInfo_TelemetrySubscription_NotificationType)(0), // 1: ntt.workplace.v1alpha2.VendorConnection_Info_PointGrabInfo_TelemetrySubscription_NotificationType
	(*PointGrab)(nil),                                                  // 2: ntt.workplace.v1alpha2.PointGrab
	(*VendorConnection)(nil),                                           // 3: ntt.workplace.v1alpha2.VendorConnection
	(*PointGrab_Telemetry)(nil),                                        // 4: ntt.workplace.v1alpha2.PointGrab.Telemetry
	(*VendorConnection_Spec)(nil),                                      // 5: ntt.workplace.v1alpha2.VendorConnection.Spec
	(*VendorConnection_Info)(nil),                                      // 6: ntt.workplace.v1alpha2.VendorConnection.Info
	(*VendorConnection_Spec_PointGrabSpec)(nil),                        // 7: ntt.workplace.v1alpha2.VendorConnection.Spec.PointGrabSpec
	(*VendorConnection_Spec_PointGrabSpec_Auth)(nil),                   // 8: ntt.workplace.v1alpha2.VendorConnection.Spec.PointGrabSpec.Auth
	(*VendorConnection_Spec_PointGrabSpec_CallbackSpec)(nil),           // 9: ntt.workplace.v1alpha2.VendorConnection.Spec.PointGrabSpec.CallbackSpec
	(*VendorConnection_Spec_PointGrabSpec_CallbackSpec_AuthToken)(nil), // 10: ntt.workplace.v1alpha2.VendorConnection.Spec.PointGrabSpec.CallbackSpec.AuthToken
	(*VendorConnection_Info_PointGrabInfo)(nil),                        // 11: ntt.workplace.v1alpha2.VendorConnection.Info.PointGrabInfo
	(*VendorConnection_Info_PointGrabInfo_TelemetrySubscription)(nil),  // 12: ntt.workplace.v1alpha2.VendorConnection.Info.PointGrabInfo.TelemetrySubscription
	(workplace_common.Vendor)(0),                                       // 13: ntt.workplace.v1alpha2.Vendor
	(*ntt_meta.Meta)(nil),                                              // 14: ntt.types.Meta
}
var workplace_proto_v1alpha2_vendor_connection_proto_depIdxs = []int32{
	13, // 0: ntt.workplace.v1alpha2.VendorConnection.vendor:type_name -> ntt.workplace.v1alpha2.Vendor
	5,  // 1: ntt.workplace.v1alpha2.VendorConnection.spec:type_name -> ntt.workplace.v1alpha2.VendorConnection.Spec
	6,  // 2: ntt.workplace.v1alpha2.VendorConnection.info:type_name -> ntt.workplace.v1alpha2.VendorConnection.Info
	14, // 3: ntt.workplace.v1alpha2.VendorConnection.metadata:type_name -> ntt.types.Meta
	7,  // 4: ntt.workplace.v1alpha2.VendorConnection.Spec.point_grab:type_name -> ntt.workplace.v1alpha2.VendorConnection.Spec.PointGrabSpec
	11, // 5: ntt.workplace.v1alpha2.VendorConnection.Info.info:type_name -> ntt.workplace.v1alpha2.VendorConnection.Info.PointGrabInfo
	8,  // 6: ntt.workplace.v1alpha2.VendorConnection.Spec.PointGrabSpec.auth:type_name -> ntt.workplace.v1alpha2.VendorConnection.Spec.PointGrabSpec.Auth
	9,  // 7: ntt.workplace.v1alpha2.VendorConnection.Spec.PointGrabSpec.callback_spec:type_name -> ntt.workplace.v1alpha2.VendorConnection.Spec.PointGrabSpec.CallbackSpec
	10, // 8: ntt.workplace.v1alpha2.VendorConnection.Spec.PointGrabSpec.CallbackSpec.auth_token:type_name -> ntt.workplace.v1alpha2.VendorConnection.Spec.PointGrabSpec.CallbackSpec.AuthToken
	12, // 9: ntt.workplace.v1alpha2.VendorConnection.Info.PointGrabInfo.telemetry_subscriptions:type_name -> ntt.workplace.v1alpha2.VendorConnection.Info.PointGrabInfo.TelemetrySubscription
	1,  // 10: ntt.workplace.v1alpha2.VendorConnection.Info.PointGrabInfo.TelemetrySubscription.notification_type:type_name -> ntt.workplace.v1alpha2.VendorConnection_Info_PointGrabInfo_TelemetrySubscription_NotificationType
	11, // [11:11] is the sub-list for method output_type
	11, // [11:11] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { workplace_proto_v1alpha2_vendor_connection_proto_init() }
func workplace_proto_v1alpha2_vendor_connection_proto_init() {
	if workplace_proto_v1alpha2_vendor_connection_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {

		workplace_proto_v1alpha2_vendor_connection_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PointGrab); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		workplace_proto_v1alpha2_vendor_connection_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VendorConnection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		workplace_proto_v1alpha2_vendor_connection_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PointGrab_Telemetry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		workplace_proto_v1alpha2_vendor_connection_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VendorConnection_Spec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		workplace_proto_v1alpha2_vendor_connection_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VendorConnection_Info); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		workplace_proto_v1alpha2_vendor_connection_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VendorConnection_Spec_PointGrabSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		workplace_proto_v1alpha2_vendor_connection_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VendorConnection_Spec_PointGrabSpec_Auth); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		workplace_proto_v1alpha2_vendor_connection_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VendorConnection_Spec_PointGrabSpec_CallbackSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		workplace_proto_v1alpha2_vendor_connection_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VendorConnection_Spec_PointGrabSpec_CallbackSpec_AuthToken); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		workplace_proto_v1alpha2_vendor_connection_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VendorConnection_Info_PointGrabInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		workplace_proto_v1alpha2_vendor_connection_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VendorConnection_Info_PointGrabInfo_TelemetrySubscription); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}

	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: workplace_proto_v1alpha2_vendor_connection_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           workplace_proto_v1alpha2_vendor_connection_proto_goTypes,
		DependencyIndexes: workplace_proto_v1alpha2_vendor_connection_proto_depIdxs,
		EnumInfos:         workplace_proto_v1alpha2_vendor_connection_proto_enumTypes,
		MessageInfos:      workplace_proto_v1alpha2_vendor_connection_proto_msgTypes,
	}.Build()
	workplace_proto_v1alpha2_vendor_connection_proto = out.File
	workplace_proto_v1alpha2_vendor_connection_proto_rawDesc = nil
	workplace_proto_v1alpha2_vendor_connection_proto_goTypes = nil
	workplace_proto_v1alpha2_vendor_connection_proto_depIdxs = nil
}
