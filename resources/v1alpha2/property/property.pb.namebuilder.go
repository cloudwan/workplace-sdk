// Code generated by protoc-gen-goten-resource
// Resource: Property
// DO NOT EDIT!!!

package property

import (
	gotenresource "github.com/cloudwan/goten-sdk/runtime/resource"
)

// proto imports
import (
	ntt_meta "github.com/cloudwan/edgelq-sdk/common/types/meta"
	area "github.com/cloudwan/workplace-sdk/resources/v1alpha2/area"
	building "github.com/cloudwan/workplace-sdk/resources/v1alpha2/building"
	workplace_common "github.com/cloudwan/workplace-sdk/resources/v1alpha2/common"
	device "github.com/cloudwan/workplace-sdk/resources/v1alpha2/device"
	floor "github.com/cloudwan/workplace-sdk/resources/v1alpha2/floor"
	site "github.com/cloudwan/workplace-sdk/resources/v1alpha2/site"
	zone "github.com/cloudwan/workplace-sdk/resources/v1alpha2/zone"
)

// make sure we're using proto imports
var (
	_ = &ntt_meta.Meta{}
	_ = &area.Area{}
	_ = &workplace_common.BACNetEntity{}
	_ = &building.Building{}
	_ = &device.Device{}
	_ = &floor.Floor{}
	_ = &site.Site{}
	_ = &zone.Zone{}
)

const (
	NamePattern_Project_Region_Site                          = "projects/{project}/regions/{region}/sites/{site}/properties/{property}"
	NamePattern_Project_Region_Site_Building                 = "projects/{project}/regions/{region}/sites/{site}/buildings/{building}/properties/{property}"
	NamePattern_Project_Region_Site_Building_Floor           = "projects/{project}/regions/{region}/sites/{site}/buildings/{building}/floors/{floor}/properties/{property}"
	NamePattern_Project_Region_Site_Building_Floor_Area      = "projects/{project}/regions/{region}/sites/{site}/buildings/{building}/floors/{floor}/areas/{area}/properties/{property}"
	NamePattern_Project_Region_Site_Zone                     = "projects/{project}/regions/{region}/sites/{site}/zones/{zone}/properties/{property}"
	NamePattern_Project_Region_Site_Building_Zone            = "projects/{project}/regions/{region}/sites/{site}/buildings/{building}/zones/{zone}/properties/{property}"
	NamePattern_Project_Region_Site_Building_Floor_Zone      = "projects/{project}/regions/{region}/sites/{site}/buildings/{building}/floors/{floor}/zones/{zone}/properties/{property}"
	NamePattern_Project_Region_Site_Building_Floor_Area_Zone = "projects/{project}/regions/{region}/sites/{site}/buildings/{building}/floors/{floor}/areas/{area}/zones/{zone}/properties/{property}"
	NamePattern_Project_Region_Site_Device                   = "projects/{project}/regions/{region}/sites/{site}/devices/{device}/properties/{property}"
)

type NamePattern struct {
	Pattern gotenresource.NamePattern `firestore:"pattern"`
}

type NameBuilder struct {
	nameObj Name
}

func NewNameBuilder() *NameBuilder {
	return &NameBuilder{
		nameObj: Name{
			PropertyId: gotenresource.WildcardId,
			ParentName: ParentName{
				NamePattern: NamePattern{
					// Set default pattern - just first.
					Pattern: NamePattern_Project_Region_Site,
				},
			},
		},
	}
}

func (b *NameBuilder) Name() *Name {
	copied := b.nameObj
	return &copied
}

func (b *NameBuilder) Reference() *Reference {
	return b.nameObj.AsReference()
}

func (b *NameBuilder) Parent() *ParentName {
	copied := b.nameObj.ParentName
	return &copied
}

func (b *NameBuilder) ParentReference() *ParentReference {
	return b.nameObj.ParentName.AsReference()
}

func (b *NameBuilder) SetId(id string) *NameBuilder {
	b.nameObj.PropertyId = id
	return b
}

func (b *NameBuilder) SetSite(parent *site.Name) *NameBuilder {
	parentName := &b.nameObj.ParentName

	switch parent.Pattern {
	case site.NamePattern_Project_Region:
		parentName.Pattern = NamePattern_Project_Region_Site
	}
	parentName.ProjectId = parent.ProjectId
	parentName.RegionId = parent.RegionId
	parentName.SiteId = parent.SiteId
	return b
}

func (b *NameBuilder) SetBuilding(parent *building.Name) *NameBuilder {
	parentName := &b.nameObj.ParentName

	switch parent.Pattern {
	case building.NamePattern_Project_Region_Site:
		parentName.Pattern = NamePattern_Project_Region_Site_Building
	}
	parentName.ProjectId = parent.ProjectId
	parentName.RegionId = parent.RegionId
	parentName.SiteId = parent.SiteId
	parentName.BuildingId = parent.BuildingId
	return b
}

func (b *NameBuilder) SetFloor(parent *floor.Name) *NameBuilder {
	parentName := &b.nameObj.ParentName

	switch parent.Pattern {
	case floor.NamePattern_Project_Region_Site_Building:
		parentName.Pattern = NamePattern_Project_Region_Site_Building_Floor
	}
	parentName.ProjectId = parent.ProjectId
	parentName.RegionId = parent.RegionId
	parentName.SiteId = parent.SiteId
	parentName.BuildingId = parent.BuildingId
	parentName.FloorId = parent.FloorId
	return b
}

func (b *NameBuilder) SetArea(parent *area.Name) *NameBuilder {
	parentName := &b.nameObj.ParentName

	switch parent.Pattern {
	case area.NamePattern_Project_Region_Site_Building_Floor:
		parentName.Pattern = NamePattern_Project_Region_Site_Building_Floor_Area
	}
	parentName.ProjectId = parent.ProjectId
	parentName.RegionId = parent.RegionId
	parentName.SiteId = parent.SiteId
	parentName.BuildingId = parent.BuildingId
	parentName.FloorId = parent.FloorId
	parentName.AreaId = parent.AreaId
	return b
}

func (b *NameBuilder) SetZone(parent *zone.Name) *NameBuilder {
	parentName := &b.nameObj.ParentName

	switch parent.Pattern {
	case zone.NamePattern_Project_Region_Site:
		parentName.Pattern = NamePattern_Project_Region_Site_Zone
	case zone.NamePattern_Project_Region_Site_Building:
		parentName.Pattern = NamePattern_Project_Region_Site_Building_Zone
	case zone.NamePattern_Project_Region_Site_Building_Floor:
		parentName.Pattern = NamePattern_Project_Region_Site_Building_Floor_Zone
	case zone.NamePattern_Project_Region_Site_Building_Floor_Area:
		parentName.Pattern = NamePattern_Project_Region_Site_Building_Floor_Area_Zone
	}
	parentName.ProjectId = parent.ProjectId
	parentName.RegionId = parent.RegionId
	parentName.SiteId = parent.SiteId
	parentName.ZoneId = parent.ZoneId
	parentName.BuildingId = parent.BuildingId
	parentName.FloorId = parent.FloorId
	parentName.AreaId = parent.AreaId
	return b
}

func (b *NameBuilder) SetDevice(parent *device.Name) *NameBuilder {
	parentName := &b.nameObj.ParentName

	switch parent.Pattern {
	case device.NamePattern_Project_Region_Site:
		parentName.Pattern = NamePattern_Project_Region_Site_Device
	}
	parentName.ProjectId = parent.ProjectId
	parentName.RegionId = parent.RegionId
	parentName.SiteId = parent.SiteId
	parentName.DeviceId = parent.DeviceId
	return b
}

func (b *NameBuilder) SetProjectId(id string) *NameBuilder {
	parentName := &b.nameObj.ParentName
	parentName.ProjectId = id

	// Set pattern if something matches for this set of IDs
	if parentName.ProjectId != "" && parentName.RegionId != "" && parentName.SiteId != "" {
		parentName.Pattern = NamePattern_Project_Region_Site
	}
	if parentName.ProjectId != "" && parentName.RegionId != "" && parentName.SiteId != "" && parentName.BuildingId != "" {
		parentName.Pattern = NamePattern_Project_Region_Site_Building
	}
	if parentName.ProjectId != "" && parentName.RegionId != "" && parentName.SiteId != "" && parentName.BuildingId != "" && parentName.FloorId != "" {
		parentName.Pattern = NamePattern_Project_Region_Site_Building_Floor
	}
	if parentName.ProjectId != "" && parentName.RegionId != "" && parentName.SiteId != "" && parentName.BuildingId != "" && parentName.FloorId != "" && parentName.AreaId != "" {
		parentName.Pattern = NamePattern_Project_Region_Site_Building_Floor_Area
	}
	if parentName.ProjectId != "" && parentName.RegionId != "" && parentName.SiteId != "" && parentName.ZoneId != "" {
		parentName.Pattern = NamePattern_Project_Region_Site_Zone
	}
	if parentName.ProjectId != "" && parentName.RegionId != "" && parentName.SiteId != "" && parentName.BuildingId != "" && parentName.ZoneId != "" {
		parentName.Pattern = NamePattern_Project_Region_Site_Building_Zone
	}
	if parentName.ProjectId != "" && parentName.RegionId != "" && parentName.SiteId != "" && parentName.BuildingId != "" && parentName.FloorId != "" && parentName.ZoneId != "" {
		parentName.Pattern = NamePattern_Project_Region_Site_Building_Floor_Zone
	}
	if parentName.ProjectId != "" && parentName.RegionId != "" && parentName.SiteId != "" && parentName.BuildingId != "" && parentName.FloorId != "" && parentName.AreaId != "" && parentName.ZoneId != "" {
		parentName.Pattern = NamePattern_Project_Region_Site_Building_Floor_Area_Zone
	}
	if parentName.ProjectId != "" && parentName.RegionId != "" && parentName.SiteId != "" && parentName.DeviceId != "" {
		parentName.Pattern = NamePattern_Project_Region_Site_Device
	}
	return b
}

func (b *NameBuilder) SetRegionId(id string) *NameBuilder {
	parentName := &b.nameObj.ParentName
	parentName.RegionId = id

	// Set pattern if something matches for this set of IDs
	if parentName.ProjectId != "" && parentName.RegionId != "" && parentName.SiteId != "" {
		parentName.Pattern = NamePattern_Project_Region_Site
	}
	if parentName.ProjectId != "" && parentName.RegionId != "" && parentName.SiteId != "" && parentName.BuildingId != "" {
		parentName.Pattern = NamePattern_Project_Region_Site_Building
	}
	if parentName.ProjectId != "" && parentName.RegionId != "" && parentName.SiteId != "" && parentName.BuildingId != "" && parentName.FloorId != "" {
		parentName.Pattern = NamePattern_Project_Region_Site_Building_Floor
	}
	if parentName.ProjectId != "" && parentName.RegionId != "" && parentName.SiteId != "" && parentName.BuildingId != "" && parentName.FloorId != "" && parentName.AreaId != "" {
		parentName.Pattern = NamePattern_Project_Region_Site_Building_Floor_Area
	}
	if parentName.ProjectId != "" && parentName.RegionId != "" && parentName.SiteId != "" && parentName.ZoneId != "" {
		parentName.Pattern = NamePattern_Project_Region_Site_Zone
	}
	if parentName.ProjectId != "" && parentName.RegionId != "" && parentName.SiteId != "" && parentName.BuildingId != "" && parentName.ZoneId != "" {
		parentName.Pattern = NamePattern_Project_Region_Site_Building_Zone
	}
	if parentName.ProjectId != "" && parentName.RegionId != "" && parentName.SiteId != "" && parentName.BuildingId != "" && parentName.FloorId != "" && parentName.ZoneId != "" {
		parentName.Pattern = NamePattern_Project_Region_Site_Building_Floor_Zone
	}
	if parentName.ProjectId != "" && parentName.RegionId != "" && parentName.SiteId != "" && parentName.BuildingId != "" && parentName.FloorId != "" && parentName.AreaId != "" && parentName.ZoneId != "" {
		parentName.Pattern = NamePattern_Project_Region_Site_Building_Floor_Area_Zone
	}
	if parentName.ProjectId != "" && parentName.RegionId != "" && parentName.SiteId != "" && parentName.DeviceId != "" {
		parentName.Pattern = NamePattern_Project_Region_Site_Device
	}
	return b
}

func (b *NameBuilder) SetSiteId(id string) *NameBuilder {
	parentName := &b.nameObj.ParentName
	parentName.SiteId = id

	// Set pattern if something matches for this set of IDs
	if parentName.ProjectId != "" && parentName.RegionId != "" && parentName.SiteId != "" {
		parentName.Pattern = NamePattern_Project_Region_Site
	}
	if parentName.ProjectId != "" && parentName.RegionId != "" && parentName.SiteId != "" && parentName.BuildingId != "" {
		parentName.Pattern = NamePattern_Project_Region_Site_Building
	}
	if parentName.ProjectId != "" && parentName.RegionId != "" && parentName.SiteId != "" && parentName.BuildingId != "" && parentName.FloorId != "" {
		parentName.Pattern = NamePattern_Project_Region_Site_Building_Floor
	}
	if parentName.ProjectId != "" && parentName.RegionId != "" && parentName.SiteId != "" && parentName.BuildingId != "" && parentName.FloorId != "" && parentName.AreaId != "" {
		parentName.Pattern = NamePattern_Project_Region_Site_Building_Floor_Area
	}
	if parentName.ProjectId != "" && parentName.RegionId != "" && parentName.SiteId != "" && parentName.ZoneId != "" {
		parentName.Pattern = NamePattern_Project_Region_Site_Zone
	}
	if parentName.ProjectId != "" && parentName.RegionId != "" && parentName.SiteId != "" && parentName.BuildingId != "" && parentName.ZoneId != "" {
		parentName.Pattern = NamePattern_Project_Region_Site_Building_Zone
	}
	if parentName.ProjectId != "" && parentName.RegionId != "" && parentName.SiteId != "" && parentName.BuildingId != "" && parentName.FloorId != "" && parentName.ZoneId != "" {
		parentName.Pattern = NamePattern_Project_Region_Site_Building_Floor_Zone
	}
	if parentName.ProjectId != "" && parentName.RegionId != "" && parentName.SiteId != "" && parentName.BuildingId != "" && parentName.FloorId != "" && parentName.AreaId != "" && parentName.ZoneId != "" {
		parentName.Pattern = NamePattern_Project_Region_Site_Building_Floor_Area_Zone
	}
	if parentName.ProjectId != "" && parentName.RegionId != "" && parentName.SiteId != "" && parentName.DeviceId != "" {
		parentName.Pattern = NamePattern_Project_Region_Site_Device
	}
	return b
}

func (b *NameBuilder) SetBuildingId(id string) *NameBuilder {
	parentName := &b.nameObj.ParentName
	parentName.BuildingId = id

	// Set pattern if something matches for this set of IDs
	if parentName.ProjectId != "" && parentName.RegionId != "" && parentName.SiteId != "" && parentName.BuildingId != "" {
		parentName.Pattern = NamePattern_Project_Region_Site_Building
	}
	if parentName.ProjectId != "" && parentName.RegionId != "" && parentName.SiteId != "" && parentName.BuildingId != "" && parentName.FloorId != "" {
		parentName.Pattern = NamePattern_Project_Region_Site_Building_Floor
	}
	if parentName.ProjectId != "" && parentName.RegionId != "" && parentName.SiteId != "" && parentName.BuildingId != "" && parentName.FloorId != "" && parentName.AreaId != "" {
		parentName.Pattern = NamePattern_Project_Region_Site_Building_Floor_Area
	}
	if parentName.ProjectId != "" && parentName.RegionId != "" && parentName.SiteId != "" && parentName.BuildingId != "" && parentName.ZoneId != "" {
		parentName.Pattern = NamePattern_Project_Region_Site_Building_Zone
	}
	if parentName.ProjectId != "" && parentName.RegionId != "" && parentName.SiteId != "" && parentName.BuildingId != "" && parentName.FloorId != "" && parentName.ZoneId != "" {
		parentName.Pattern = NamePattern_Project_Region_Site_Building_Floor_Zone
	}
	if parentName.ProjectId != "" && parentName.RegionId != "" && parentName.SiteId != "" && parentName.BuildingId != "" && parentName.FloorId != "" && parentName.AreaId != "" && parentName.ZoneId != "" {
		parentName.Pattern = NamePattern_Project_Region_Site_Building_Floor_Area_Zone
	}
	return b
}

func (b *NameBuilder) SetFloorId(id string) *NameBuilder {
	parentName := &b.nameObj.ParentName
	parentName.FloorId = id

	// Set pattern if something matches for this set of IDs
	if parentName.ProjectId != "" && parentName.RegionId != "" && parentName.SiteId != "" && parentName.BuildingId != "" && parentName.FloorId != "" {
		parentName.Pattern = NamePattern_Project_Region_Site_Building_Floor
	}
	if parentName.ProjectId != "" && parentName.RegionId != "" && parentName.SiteId != "" && parentName.BuildingId != "" && parentName.FloorId != "" && parentName.AreaId != "" {
		parentName.Pattern = NamePattern_Project_Region_Site_Building_Floor_Area
	}
	if parentName.ProjectId != "" && parentName.RegionId != "" && parentName.SiteId != "" && parentName.BuildingId != "" && parentName.FloorId != "" && parentName.ZoneId != "" {
		parentName.Pattern = NamePattern_Project_Region_Site_Building_Floor_Zone
	}
	if parentName.ProjectId != "" && parentName.RegionId != "" && parentName.SiteId != "" && parentName.BuildingId != "" && parentName.FloorId != "" && parentName.AreaId != "" && parentName.ZoneId != "" {
		parentName.Pattern = NamePattern_Project_Region_Site_Building_Floor_Area_Zone
	}
	return b
}

func (b *NameBuilder) SetAreaId(id string) *NameBuilder {
	parentName := &b.nameObj.ParentName
	parentName.AreaId = id

	// Set pattern if something matches for this set of IDs
	if parentName.ProjectId != "" && parentName.RegionId != "" && parentName.SiteId != "" && parentName.BuildingId != "" && parentName.FloorId != "" && parentName.AreaId != "" {
		parentName.Pattern = NamePattern_Project_Region_Site_Building_Floor_Area
	}
	if parentName.ProjectId != "" && parentName.RegionId != "" && parentName.SiteId != "" && parentName.BuildingId != "" && parentName.FloorId != "" && parentName.AreaId != "" && parentName.ZoneId != "" {
		parentName.Pattern = NamePattern_Project_Region_Site_Building_Floor_Area_Zone
	}
	return b
}

func (b *NameBuilder) SetZoneId(id string) *NameBuilder {
	parentName := &b.nameObj.ParentName
	parentName.ZoneId = id

	// Set pattern if something matches for this set of IDs
	if parentName.ProjectId != "" && parentName.RegionId != "" && parentName.SiteId != "" && parentName.ZoneId != "" {
		parentName.Pattern = NamePattern_Project_Region_Site_Zone
	}
	if parentName.ProjectId != "" && parentName.RegionId != "" && parentName.SiteId != "" && parentName.BuildingId != "" && parentName.ZoneId != "" {
		parentName.Pattern = NamePattern_Project_Region_Site_Building_Zone
	}
	if parentName.ProjectId != "" && parentName.RegionId != "" && parentName.SiteId != "" && parentName.BuildingId != "" && parentName.FloorId != "" && parentName.ZoneId != "" {
		parentName.Pattern = NamePattern_Project_Region_Site_Building_Floor_Zone
	}
	if parentName.ProjectId != "" && parentName.RegionId != "" && parentName.SiteId != "" && parentName.BuildingId != "" && parentName.FloorId != "" && parentName.AreaId != "" && parentName.ZoneId != "" {
		parentName.Pattern = NamePattern_Project_Region_Site_Building_Floor_Area_Zone
	}
	return b
}

func (b *NameBuilder) SetDeviceId(id string) *NameBuilder {
	parentName := &b.nameObj.ParentName
	parentName.DeviceId = id

	// Set pattern if something matches for this set of IDs
	if parentName.ProjectId != "" && parentName.RegionId != "" && parentName.SiteId != "" && parentName.DeviceId != "" {
		parentName.Pattern = NamePattern_Project_Region_Site_Device
	}
	return b
}
