// Code generated by protoc-gen-goten-resource
// Resource: Property
// DO NOT EDIT!!!

package property

import (
	gotenobject "github.com/cloudwan/goten-sdk/runtime/object"
	gotenresource "github.com/cloudwan/goten-sdk/runtime/resource"
)

// proto imports
import (
	ntt_meta "github.com/cloudwan/edgelq-sdk/common/types/meta"
	area "github.com/cloudwan/workplace-sdk/resources/v1alpha2/area"
	building "github.com/cloudwan/workplace-sdk/resources/v1alpha2/building"
	workplace_common "github.com/cloudwan/workplace-sdk/resources/v1alpha2/common"
	device "github.com/cloudwan/workplace-sdk/resources/v1alpha2/device"
	floor "github.com/cloudwan/workplace-sdk/resources/v1alpha2/floor"
	site "github.com/cloudwan/workplace-sdk/resources/v1alpha2/site"
	zone "github.com/cloudwan/workplace-sdk/resources/v1alpha2/zone"
)

// ensure the imports are used
var (
	_ = gotenobject.FieldPath(nil)
	_ = gotenresource.ListQuery(nil)
)

// make sure we're using proto imports
var (
	_ = &ntt_meta.Meta{}
	_ = &area.Area{}
	_ = &workplace_common.BACNetEntity{}
	_ = &building.Building{}
	_ = &device.Device{}
	_ = &floor.Floor{}
	_ = &site.Site{}
	_ = &zone.Zone{}
)

var (
	descriptor = &Descriptor{
		typeName: gotenresource.NewTypeName(
			"Property", "Properties", "workplace.edgelq.com"),
		nameDescriptor: gotenresource.NewNameDescriptor(
			&Property_FieldTerminalPath{selector: Property_FieldPathSelectorName},
			"pattern", "propertyId",
			[]string{"projectId", "regionId", "siteId", "buildingId", "floorId", "areaId", "zoneId", "deviceId"},
			[]gotenresource.NamePattern{NamePattern_Project_Region_Site, NamePattern_Project_Region_Site_Building, NamePattern_Project_Region_Site_Building_Floor, NamePattern_Project_Region_Site_Building_Floor_Area, NamePattern_Project_Region_Site_Zone, NamePattern_Project_Region_Site_Building_Zone, NamePattern_Project_Region_Site_Building_Floor_Zone, NamePattern_Project_Region_Site_Building_Floor_Area_Zone, NamePattern_Project_Region_Site_Device}),
	}
)

type Descriptor struct {
	nameDescriptor *gotenresource.NameDescriptor
	typeName       *gotenresource.TypeName
}

func GetDescriptor() *Descriptor {
	return descriptor
}

func (d *Descriptor) NewProperty() *Property {
	return &Property{}
}

func (d *Descriptor) NewResource() gotenresource.Resource {
	return d.NewProperty()
}

func (d *Descriptor) NewResourceName() gotenresource.Name {
	return NewNameBuilder().Name()
}

func (d *Descriptor) NewPropertyName() *Name {
	return NewNameBuilder().Name()
}

func (d *Descriptor) NewGetQuery() gotenresource.GetQuery {
	return &GetQuery{}
}

func (d *Descriptor) NewListQuery() gotenresource.ListQuery {
	return &ListQuery{}
}

func (d *Descriptor) NewSearchQuery() gotenresource.SearchQuery {
	return nil
}

func (d *Descriptor) NewWatchQuery() gotenresource.WatchQuery {
	return &WatchQuery{}
}
func (d *Descriptor) NewPropertyCursor() *PagerCursor {
	return &PagerCursor{}
}

func (d *Descriptor) NewResourceCursor() gotenresource.Cursor {
	return d.NewPropertyCursor()
}
func (d *Descriptor) NewPropertyChange() *PropertyChange {
	return &PropertyChange{}
}

func (d *Descriptor) NewResourceChange() gotenresource.ResourceChange {
	return d.NewPropertyChange()
}

func (d *Descriptor) NewPropertyQueryResultSnapshot() *QueryResultSnapshot {
	return &QueryResultSnapshot{}
}

func (d *Descriptor) NewQueryResultSnapshot() gotenresource.QueryResultSnapshot {
	return d.NewPropertyQueryResultSnapshot()
}
func (d *Descriptor) NewPropertyQueryResultChange() *QueryResultChange {
	return &QueryResultChange{}
}

func (d *Descriptor) NewSearchQueryResultSnapshot() gotenresource.SearchQueryResultSnapshot {
	return nil
}

func (d *Descriptor) NewQueryResultChange() gotenresource.QueryResultChange {
	return d.NewPropertyQueryResultChange()
}

func (d *Descriptor) NewPropertyList(size, reserved int) PropertyList {
	return make(PropertyList, size, reserved)
}

func (d *Descriptor) NewResourceList(size, reserved int) gotenresource.ResourceList {
	return make(PropertyList, size, reserved)
}
func (d *Descriptor) NewPropertyChangeList(size, reserved int) PropertyChangeList {
	return make(PropertyChangeList, size, reserved)
}

func (d *Descriptor) NewResourceChangeList(size, reserved int) gotenresource.ResourceChangeList {
	return make(PropertyChangeList, size, reserved)
}

func (d *Descriptor) NewPropertyNameList(size, reserved int) PropertyNameList {
	return make(PropertyNameList, size, reserved)
}

func (d *Descriptor) NewNameList(size, reserved int) gotenresource.NameList {
	return make(PropertyNameList, size, reserved)
}

func (d *Descriptor) NewPropertyReferenceList(size, reserved int) PropertyReferenceList {
	return make(PropertyReferenceList, size, reserved)
}

func (d *Descriptor) NewReferenceList(size, reserved int) gotenresource.ReferenceList {
	return make(PropertyReferenceList, size, reserved)
}
func (d *Descriptor) NewPropertyParentNameList(size, reserved int) PropertyParentNameList {
	return make(PropertyParentNameList, size, reserved)
}

func (d *Descriptor) NewParentNameList(size, reserved int) gotenresource.ParentNameList {
	return make(PropertyParentNameList, size, reserved)
}
func (d *Descriptor) NewPropertyParentReferenceList(size, reserved int) PropertyParentReferenceList {
	return make(PropertyParentReferenceList, size, reserved)
}

func (d *Descriptor) NewParentReferenceList(size, reserved int) gotenresource.ParentReferenceList {
	return make(PropertyParentReferenceList, size, reserved)
}

func (d *Descriptor) NewPropertyMap(reserved int) PropertyMap {
	return make(PropertyMap, reserved)
}

func (d *Descriptor) NewResourceMap(reserved int) gotenresource.ResourceMap {
	return make(PropertyMap, reserved)
}
func (d *Descriptor) NewPropertyChangeMap(reserved int) PropertyChangeMap {
	return make(PropertyChangeMap, reserved)
}

func (d *Descriptor) NewResourceChangeMap(reserved int) gotenresource.ResourceChangeMap {
	return make(PropertyChangeMap, reserved)
}

func (d *Descriptor) GetResourceTypeName() *gotenresource.TypeName {
	return d.typeName
}

func (d *Descriptor) GetNameDescriptor() *gotenresource.NameDescriptor {
	return d.nameDescriptor
}

func (d *Descriptor) ParseFieldPath(raw string) (gotenobject.FieldPath, error) {
	return ParseProperty_FieldPath(raw)
}

func (d *Descriptor) ParsePropertyName(nameStr string) (*Name, error) {
	return ParseName(nameStr)
}

func (d *Descriptor) ParseResourceName(nameStr string) (gotenresource.Name, error) {
	return ParseName(nameStr)
}
