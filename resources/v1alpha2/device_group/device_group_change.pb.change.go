// Code generated by protoc-gen-goten-resource
// Resource change: DeviceGroupChange
// DO NOT EDIT!!!

package device_group

import (
	gotenresource "github.com/cloudwan/goten-sdk/runtime/resource"
)

// proto imports
import (
	iam_project "github.com/cloudwan/edgelq-sdk/iam/resources/v1alpha2/project"
	field_mask "google.golang.org/genproto/protobuf/field_mask"
)

// ensure the imports are used
var (
	_ = gotenresource.ListQuery(nil)
)

// make sure we're using proto imports
var (
	_ = &iam_project.Project{}
	_ = &field_mask.FieldMask{}
)

func (c *DeviceGroupChange) IsAdd() bool {
	if c == nil {
		return false
	}
	_, ok := c.ChangeType.(*DeviceGroupChange_Added_)
	return ok
}

func (c *DeviceGroupChange) IsModify() bool {
	if c == nil {
		return false
	}
	_, ok := c.ChangeType.(*DeviceGroupChange_Modified_)
	return ok
}

func (c *DeviceGroupChange) IsCurrent() bool {
	if c == nil {
		return false
	}
	_, ok := c.ChangeType.(*DeviceGroupChange_Current_)
	return ok
}

func (c *DeviceGroupChange) IsDelete() bool {
	if c == nil {
		return false
	}
	_, ok := c.ChangeType.(*DeviceGroupChange_Removed_)
	return ok
}

func (c *DeviceGroupChange) GetCurrentViewIndex() int32 {
	switch cType := c.ChangeType.(type) {
	case *DeviceGroupChange_Added_:
		return cType.Added.ViewIndex
	case *DeviceGroupChange_Modified_:
		return cType.Modified.ViewIndex
	}
	return 0
}

func (c *DeviceGroupChange) GetPreviousViewIndex() int32 {
	switch cType := c.ChangeType.(type) {
	case *DeviceGroupChange_Removed_:
		return cType.Removed.ViewIndex
	case *DeviceGroupChange_Modified_:
		return cType.Modified.PreviousViewIndex
	}
	return 0
}

func (c *DeviceGroupChange) GetDeviceGroup() *DeviceGroup {
	if c == nil {
		return nil
	}
	switch cType := c.ChangeType.(type) {
	case *DeviceGroupChange_Added_:
		return cType.Added.DeviceGroup
	case *DeviceGroupChange_Modified_:
		return cType.Modified.DeviceGroup
	case *DeviceGroupChange_Current_:
		return cType.Current.DeviceGroup
	case *DeviceGroupChange_Removed_:
		return nil
	}
	return nil
}

func (c *DeviceGroupChange) GetResource() gotenresource.Resource {
	return c.GetDeviceGroup()
}

func (c *DeviceGroupChange) GetDeviceGroupName() *Name {
	if c == nil {
		return nil
	}
	switch cType := c.ChangeType.(type) {
	case *DeviceGroupChange_Added_:
		return cType.Added.DeviceGroup.GetName()
	case *DeviceGroupChange_Modified_:
		return cType.Modified.Name
	case *DeviceGroupChange_Current_:
		return cType.Current.DeviceGroup.GetName()
	case *DeviceGroupChange_Removed_:
		return cType.Removed.Name
	}
	return nil
}

func (c *DeviceGroupChange) GetRawName() gotenresource.Name {
	return c.GetDeviceGroupName()
}

func (c *DeviceGroupChange) SetAddedRaw(snapshot gotenresource.Resource, idx int) {
	c.ChangeType = &DeviceGroupChange_Added_{
		Added: &DeviceGroupChange_Added{
			DeviceGroup: snapshot.(*DeviceGroup),
			ViewIndex:   int32(idx),
		},
	}
}

func (c *DeviceGroupChange) SetModifiedRaw(name gotenresource.Name, snapshot gotenresource.Resource, prevIdx int, newIdx int) {
	c.ChangeType = &DeviceGroupChange_Modified_{
		Modified: &DeviceGroupChange_Modified{
			Name:              name.(*Name),
			DeviceGroup:       snapshot.(*DeviceGroup),
			PreviousViewIndex: int32(prevIdx),
			ViewIndex:         int32(newIdx),
		},
	}
}

func (c *DeviceGroupChange) SetCurrentRaw(snapshot gotenresource.Resource) {
	c.ChangeType = &DeviceGroupChange_Current_{
		Current: &DeviceGroupChange_Current{
			DeviceGroup: snapshot.(*DeviceGroup),
		},
	}
}

func (c *DeviceGroupChange) SetDeletedRaw(name gotenresource.Name, idx int) {
	c.ChangeType = &DeviceGroupChange_Removed_{
		Removed: &DeviceGroupChange_Removed{
			Name:      name.(*Name),
			ViewIndex: int32(idx),
		},
	}
}
